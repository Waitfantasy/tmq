// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tmq.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TMQVoid struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TMQVoid) Reset()         { *m = TMQVoid{} }
func (m *TMQVoid) String() string { return proto.CompactTextString(m) }
func (*TMQVoid) ProtoMessage()    {}
func (*TMQVoid) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{0}
}
func (m *TMQVoid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TMQVoid.Unmarshal(m, b)
}
func (m *TMQVoid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TMQVoid.Marshal(b, m, deterministic)
}
func (dst *TMQVoid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TMQVoid.Merge(dst, src)
}
func (m *TMQVoid) XXX_Size() int {
	return xxx_messageInfo_TMQVoid.Size(m)
}
func (m *TMQVoid) XXX_DiscardUnknown() {
	xxx_messageInfo_TMQVoid.DiscardUnknown(m)
}

var xxx_messageInfo_TMQVoid proto.InternalMessageInfo

type PrepareRequest struct {
	Topic                string   `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	RetrySecond          uint32   `protobuf:"varint,2,opt,name=retry_second,json=retrySecond,proto3" json:"retry_second,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareRequest) Reset()         { *m = PrepareRequest{} }
func (m *PrepareRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareRequest) ProtoMessage()    {}
func (*PrepareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{1}
}
func (m *PrepareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareRequest.Unmarshal(m, b)
}
func (m *PrepareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareRequest.Marshal(b, m, deterministic)
}
func (dst *PrepareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareRequest.Merge(dst, src)
}
func (m *PrepareRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareRequest.Size(m)
}
func (m *PrepareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareRequest proto.InternalMessageInfo

func (m *PrepareRequest) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *PrepareRequest) GetRetrySecond() uint32 {
	if m != nil {
		return m.RetrySecond
	}
	return 0
}

func (m *PrepareRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type PrepareResponse struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareResponse) Reset()         { *m = PrepareResponse{} }
func (m *PrepareResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareResponse) ProtoMessage()    {}
func (*PrepareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{2}
}
func (m *PrepareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareResponse.Unmarshal(m, b)
}
func (m *PrepareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareResponse.Marshal(b, m, deterministic)
}
func (dst *PrepareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareResponse.Merge(dst, src)
}
func (m *PrepareResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareResponse.Size(m)
}
func (m *PrepareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareResponse proto.InternalMessageInfo

func (m *PrepareResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CommitRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{3}
}
func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (dst *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(dst, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CommitResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{4}
}
func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (dst *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(dst, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RollbackRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackRequest) Reset()         { *m = RollbackRequest{} }
func (m *RollbackRequest) String() string { return proto.CompactTextString(m) }
func (*RollbackRequest) ProtoMessage()    {}
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{5}
}
func (m *RollbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackRequest.Unmarshal(m, b)
}
func (m *RollbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackRequest.Marshal(b, m, deterministic)
}
func (dst *RollbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackRequest.Merge(dst, src)
}
func (m *RollbackRequest) XXX_Size() int {
	return xxx_messageInfo_RollbackRequest.Size(m)
}
func (m *RollbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackRequest proto.InternalMessageInfo

func (m *RollbackRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RollbackReponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RollbackReponse) Reset()         { *m = RollbackReponse{} }
func (m *RollbackReponse) String() string { return proto.CompactTextString(m) }
func (*RollbackReponse) ProtoMessage()    {}
func (*RollbackReponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{6}
}
func (m *RollbackReponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RollbackReponse.Unmarshal(m, b)
}
func (m *RollbackReponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RollbackReponse.Marshal(b, m, deterministic)
}
func (dst *RollbackReponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RollbackReponse.Merge(dst, src)
}
func (m *RollbackReponse) XXX_Size() int {
	return xxx_messageInfo_RollbackReponse.Size(m)
}
func (m *RollbackReponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RollbackReponse.DiscardUnknown(m)
}

var xxx_messageInfo_RollbackReponse proto.InternalMessageInfo

type ConsumerAck struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConsumerAck) Reset()         { *m = ConsumerAck{} }
func (m *ConsumerAck) String() string { return proto.CompactTextString(m) }
func (*ConsumerAck) ProtoMessage()    {}
func (*ConsumerAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_tmq_5052e455d00eac8d, []int{7}
}
func (m *ConsumerAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConsumerAck.Unmarshal(m, b)
}
func (m *ConsumerAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConsumerAck.Marshal(b, m, deterministic)
}
func (dst *ConsumerAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConsumerAck.Merge(dst, src)
}
func (m *ConsumerAck) XXX_Size() int {
	return xxx_messageInfo_ConsumerAck.Size(m)
}
func (m *ConsumerAck) XXX_DiscardUnknown() {
	xxx_messageInfo_ConsumerAck.DiscardUnknown(m)
}

var xxx_messageInfo_ConsumerAck proto.InternalMessageInfo

func (m *ConsumerAck) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*TMQVoid)(nil), "TMQVoid")
	proto.RegisterType((*PrepareRequest)(nil), "PrepareRequest")
	proto.RegisterType((*PrepareResponse)(nil), "PrepareResponse")
	proto.RegisterType((*CommitRequest)(nil), "CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "CommitResponse")
	proto.RegisterType((*RollbackRequest)(nil), "RollbackRequest")
	proto.RegisterType((*RollbackReponse)(nil), "RollbackReponse")
	proto.RegisterType((*ConsumerAck)(nil), "ConsumerAck")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TMQServiceClient is the client API for TMQService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TMQServiceClient interface {
	// prepare message
	Prepare(ctx context.Context, in *PrepareRequest, opts ...grpc.CallOption) (*PrepareResponse, error)
	// commit message
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	Rollback(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackReponse, error)
	// notify mq the message has been consumerd
	ConsumerNotify(ctx context.Context, in *ConsumerAck, opts ...grpc.CallOption) (*TMQVoid, error)
}

type tMQServiceClient struct {
	cc *grpc.ClientConn
}

func NewTMQServiceClient(cc *grpc.ClientConn) TMQServiceClient {
	return &tMQServiceClient{cc}
}

func (c *tMQServiceClient) Prepare(ctx context.Context, in *PrepareRequest, opts ...grpc.CallOption) (*PrepareResponse, error) {
	out := new(PrepareResponse)
	err := c.cc.Invoke(ctx, "/TMQService/Prepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tMQServiceClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/TMQService/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tMQServiceClient) Rollback(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackReponse, error) {
	out := new(RollbackReponse)
	err := c.cc.Invoke(ctx, "/TMQService/Rollback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tMQServiceClient) ConsumerNotify(ctx context.Context, in *ConsumerAck, opts ...grpc.CallOption) (*TMQVoid, error) {
	out := new(TMQVoid)
	err := c.cc.Invoke(ctx, "/TMQService/ConsumerNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TMQServiceServer is the server API for TMQService service.
type TMQServiceServer interface {
	// prepare message
	Prepare(context.Context, *PrepareRequest) (*PrepareResponse, error)
	// commit message
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
	Rollback(context.Context, *RollbackRequest) (*RollbackReponse, error)
	// notify mq the message has been consumerd
	ConsumerNotify(context.Context, *ConsumerAck) (*TMQVoid, error)
}

func RegisterTMQServiceServer(s *grpc.Server, srv TMQServiceServer) {
	s.RegisterService(&_TMQService_serviceDesc, srv)
}

func _TMQService_Prepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TMQServiceServer).Prepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TMQService/Prepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TMQServiceServer).Prepare(ctx, req.(*PrepareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TMQService_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TMQServiceServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TMQService/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TMQServiceServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TMQService_Rollback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TMQServiceServer).Rollback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TMQService/Rollback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TMQServiceServer).Rollback(ctx, req.(*RollbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TMQService_ConsumerNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConsumerAck)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TMQServiceServer).ConsumerNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TMQService/ConsumerNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TMQServiceServer).ConsumerNotify(ctx, req.(*ConsumerAck))
	}
	return interceptor(ctx, in, info, handler)
}

var _TMQService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TMQService",
	HandlerType: (*TMQServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Prepare",
			Handler:    _TMQService_Prepare_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _TMQService_Commit_Handler,
		},
		{
			MethodName: "Rollback",
			Handler:    _TMQService_Rollback_Handler,
		},
		{
			MethodName: "ConsumerNotify",
			Handler:    _TMQService_ConsumerNotify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tmq.proto",
}

func init() { proto.RegisterFile("tmq.proto", fileDescriptor_tmq_5052e455d00eac8d) }

var fileDescriptor_tmq_5052e455d00eac8d = []byte{
	// 304 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xdf, 0x6a, 0xc2, 0x30,
	0x14, 0xc6, 0xad, 0x73, 0xfe, 0x39, 0x6a, 0x75, 0x87, 0x5d, 0x94, 0xc2, 0x98, 0xe6, 0x4a, 0x36,
	0x08, 0x63, 0x7b, 0x82, 0xe1, 0xb5, 0x63, 0x46, 0xd9, 0xdd, 0x18, 0x9a, 0x66, 0x10, 0xb4, 0xa6,
	0x26, 0x71, 0xd0, 0x27, 0xdc, 0x6b, 0x8d, 0xa5, 0x66, 0xb4, 0x85, 0xdd, 0xe5, 0x1c, 0xbe, 0xf3,
	0xe5, 0xfb, 0x9d, 0x03, 0x3d, 0x9b, 0x1e, 0x69, 0xa6, 0x95, 0x55, 0xa4, 0x07, 0x9d, 0xf5, 0x62,
	0xf9, 0xa6, 0x64, 0x42, 0xde, 0x21, 0x7c, 0xd5, 0x22, 0xdb, 0x68, 0xc1, 0xc4, 0xf1, 0x24, 0x8c,
	0xc5, 0x6b, 0xb8, 0xb4, 0x2a, 0x93, 0x3c, 0x0a, 0x26, 0xc1, 0xac, 0xc7, 0x8a, 0x02, 0xa7, 0x30,
	0xd0, 0xc2, 0xea, 0xfc, 0xc3, 0x08, 0xae, 0x0e, 0x49, 0xd4, 0x9c, 0x04, 0xb3, 0x21, 0xeb, 0xbb,
	0xde, 0xca, 0xb5, 0x10, 0xa1, 0xb5, 0x55, 0x49, 0x1e, 0x5d, 0xb8, 0x39, 0xf7, 0x26, 0x53, 0x18,
	0xfd, 0xd9, 0x9b, 0x4c, 0x1d, 0x8c, 0xc0, 0x10, 0x9a, 0x32, 0x71, 0xe6, 0x2d, 0xd6, 0x94, 0x09,
	0xb9, 0x85, 0xe1, 0x5c, 0xa5, 0xa9, 0xb4, 0x3e, 0x40, 0x5d, 0x70, 0x07, 0xa1, 0x17, 0x9c, 0x2d,
	0x22, 0xe8, 0x98, 0x13, 0xe7, 0xc2, 0x18, 0x27, 0xeb, 0x32, 0x5f, 0xfe, 0xfe, 0xc7, 0xd4, 0x7e,
	0xbf, 0xdd, 0xf0, 0xdd, 0x7f, 0x76, 0x57, 0x65, 0x89, 0xf3, 0x23, 0x37, 0xd0, 0x9f, 0xab, 0x83,
	0x39, 0xa5, 0x42, 0x3f, 0xf3, 0x5d, 0x7d, 0xe2, 0xf1, 0x3b, 0x00, 0x58, 0x2f, 0x96, 0x2b, 0xa1,
	0xbf, 0x24, 0x17, 0x48, 0xa1, 0x73, 0x66, 0xc2, 0x11, 0xad, 0x2e, 0x2f, 0x1e, 0xd3, 0x1a, 0x2e,
	0x69, 0xe0, 0x3d, 0xb4, 0x8b, 0xfc, 0x18, 0xd2, 0x0a, 0x69, 0x3c, 0xa2, 0x55, 0x30, 0xd2, 0xc0,
	0x07, 0xe8, 0xfa, 0x74, 0x38, 0xa6, 0x35, 0x96, 0xb8, 0xdc, 0xf1, 0x13, 0x6e, 0x3d, 0x45, 0xf8,
	0x17, 0x65, 0xe5, 0x67, 0x8e, 0x03, 0x5a, 0xa2, 0x89, 0xbb, 0xd4, 0xdf, 0xba, 0xb1, 0x6d, 0xbb,
	0xfb, 0x3f, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x48, 0x6d, 0x68, 0x0c, 0x02, 0x00, 0x00,
}
